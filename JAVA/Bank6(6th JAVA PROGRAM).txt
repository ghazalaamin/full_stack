/*Assignment 6:

Small Mini Projects 

Menu Driven Application 

Banking Application 

1.Create Account
a.Default Details	:  1010,1011,1012 Unknown, 500
b.Name and Amount  : 1013,Raj, 600 amount >= 500 
2.Check Account Balance 
3.Withdraw the amount 
4.Deposit 
5.Transfer 


abstract class AccountInitialization {
		static int accountCount=0;
Account accounts[]=new Account[10];
		Start with 1010 (account number )
void accountCreate() {
						account Number must be unique 
					name =”Unknown”
					amount =500;
		Account ac = new Account(accno,Unknown,500);
		accounts[acountCount]
		accountCount++;			
}
void accountCreate(name,amount) {
		accno must be unique	
amount > 500  then crate account
		assign name and amount 
Account acc = new Account(uniqueNumber);
Call helper to set name and amount;
accounts[acountCount]
accountCount++;			
}
abstract void transfer(fromaccNo,toAccNo,amount);
}

interface Bank 
			void withdraw 		: accno, amount 
			void deposit 		: accno, amount 
			void checkBalance 	: accno	
all abstract methods 

class Account 
			private Accno
			private Name 
			private Amount 		it must be private 
					write constructor empty or parameterized. 
				helper method set the value. 
				setAccno,setName,setAmount
				getAccno, getName,getAmount 

class MyBank extends AccountInitialization implements Bank {
void transfer(fromaccNo,toAccNo,amount) {
		fromAccNum : 1010 
		toAccoNumber : 1011
		amount 	must be +ve 
		fromAccoNumber may not present 
		toAccoNumber may not present 
		Amount is not available 
		Maintain min 500 in fromAccount Number 
			
}
			Withdraw {
				Accno
					AccountNumber may be not present 
				Amount 
		Amount is not available 
		Maintain min 500 in fromAccount Number 

}
			Deposit 	{
				Accno
					AccountNumber may be not present 
				Amount 
		Amount is not available 
					Can’t deposit more than 50,000/- 
} 
			Checkbalance  {
					Using account Number 
}

BankTest App 
		Main method 
		Do {
			Switch() {

1.Create Account
a.Default details 
b.Name and Amount pass;  
2.Check Account Balance 
3.Withdraw the amount 
4.Deposit 
5.Transfer
6.Exit the Application 

}
				Do want to continue. 

}while(condition)
	
 /////////////////////////////////////////////////////////////////////////////////////////////////////Welcome, thank */

                                                                   
                                                                                                                         
import java.util.*;    


abstract class AccountInitialization {
               Scanner obj=new Scanner(System.in);
		static int accountCount=0;
             Account accounts[]=new Account[10];
		                                                                      
              void accountCreate() {
                 for(int i=0;i<10;i++){
                   System.out.println("enter account number");
		   int accNo=obj.nextInt();	
                   System.out.println("enter name");		                               
		   String name=obj.next();
                   System.out.println("enter amount");
                   int amount=obj.nextInt();			                                
		   Account ac = new Account(accNo,name,amount);
		accounts[acountCount]=ac;
		accountCount++;	
                          }		
                      }			                                                       
		
            void accountCreate(name,amount) {
		  for(int i=0;i<10;i++){ 
                    Account acc = new Account(uniqueNumber);
                     acc.getName(name);
                     acc.getAmount(amount); 
                     System.out.println("enter account number");
                     int accNo=obj.nextInt();                                                                             	
                    accounts[acountCount]=acc;
                      accountCount++;
                                                                                              
		      }                                                                        
                
                   }                                                                           
                 abstract void transfer(fromaccNo,toAccNo,amount); 			
   }     


interface Bank{
          void withdraw(int accNo,int amount); 		                                       
	  void deposit(int accNo,int amount);		                                       
	  void checkBalance(int accNo);    	                                                        
  }                
         
class Account{
	   private int accNo;
	   private String name; 
	   private int amount; 		                        
					                                       
       public void setAccno(int accNo){
              
              this.accNo=accNo;
             };
       public void setName(String name){
             this.name=name;
           }; 		                                  
       public void setAmount(int amount){
              if(amount>500){
              this.amount=amount;
               }
           };			                           
				                                       

        public int getAccno(){
             return accNo;
           };
        public String getName(){ 
              return name;
          }; 		                                                
	public int getAmount(){
              return amount;
         };
}



class MyBank extends AccountInitialization implements Bank {
       void transfer(fromaccNo,toAccNo,money) {                                                         
		for(int i=0;i<accountCount;i++){
              if(ac==accounts[i].getAccno){
                if(amount>money){
                  amount=amount-money;
               }
                else{
                System.out.println("balance is not sufficient");
              }
            }
            else{
                System.out.println("Account number is not valid");
              }
           }  
			
                       }
     public boolean withdraw(int accNo,int money) {
		for(int i=0;i<accounts.length;i++){		                                                         
		     if(accNo==accounts[i].getAccno){			                                                    
			 if(money>accounts[i].getAmount){
                               accounts[i].getAmount=accounts[i].getAmount-money;
                               return true;
                          }
                          else{
                               System.out.println("no sufficient amount");
                               return false;
                            }	                                                            
		      }  
                     else{
                         System.out.println("account no is invalid");
                           return false;
                        }                                                                  
		 }                                                                      

              }
			
            public boolean Deposit(int accNo,int money){
				
                    for(int i=0;i<accounts.length;i++){		                                                        
		     if(accNo==accounts[i].getAccno){			                                                  
			 if(money>accounts[i].getAmount){
                               accounts[i].getAmount=accounts[i].getAmount+money;
                               return true;
                          }
                         else if(money>5000){
                             System.out.println("cant deposite more than 5000 ata a time");
                              return false;
                            }
                          else{
                               System.out.println("no sufficient amount");
                               return false;
                            }	                                                            
		      }  
                     else{
                         System.out.println("account no is invalid");
                           return false;
                        }                                                                  
		 }                 
            } 
		 public boolean Checkbalance(int accNo){
			 for(int i=0;i<accounts.length;i++){		                                                        
		     if(accNo==accounts[i].getAccno){			                                                  
			System.out.println(accounts[i].getAmount);
                         return true;	
                     }
                     else{ 
                       return false;
                     }
                   
           }




class BankTest{
 public static void main(String[] args){
   Scanner obj=new Scanner(System.in);
    System.out.println("1.Create Account");
    System.out.println("2.Check Account Balance ");
    System.out.println("3.Withdraw the amount");
    System.out.println("4.Deposit");
    System.out.println("5.Transfer");
    System.out.println("6.Exit the Application");
    
   int n=obj.nextInt();
   do{
   switch(n){
         case 1: System.out.println("enter your details");
                 AccountInitialization ai=new AccountInitialization();
                   ai.accountCreate();
                   ai.accountCreate(name,amount) 
                   break;
         case 2:System.out.println("Check Account Balance");
                  MyBank b=new MyBank();
                  b.Checkbalance(int accNo);
                   break;
         case 3:System.out.println("Withdraw the amount");
                  MyBank b=new MyBank();
                  b.withdraw(int accNo,int money); 
                   break;
         case 4:System.out.println("Deposit");
                   MyBank b=new MyBank();
                   b.Deposit(int accNo,int money);
                    break;
         case 5:System.out.println("Transfer");
                  MyBank b=new MyBank();
                  b.transfer(fromaccNo,toAccNo,amount);
                   break;
         case 6:System.out.println("Exit the Application");
                 break;
          default:System.out.println("invalid chice");
                 break; 

     }
  }while(true);
   
  }
}













